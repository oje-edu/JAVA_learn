Aufgabe 3

Verwenden Sie für die folgende Aufgabenstellung die Klasse Bruch
gemäß Listing 6.24 als Ausgangspunkt:

public class Bruch {

    private int zaehler;
    private int nenner;
  
    Bruch() {
        zaehler = 0;
        nenner = 1;
    }
  
    Bruch(int x) {
        zaehler = x;
        nenner = 1;
    }

	Bruch(int x, int y) {
        zaehler = x;
	  	nenner = y;
	}
	
	int getZaehler() {
	  	return zaehler;
	}
	
	int getNenner() {
	  	return nenner;
	}
	
	void setZaehler(int z) {
	 	 zaehler = z;
	}
	
	void setNenner(int n) {
	 	 nenner = n;
	}
	
	void ausgeben() {
	  	System.out.print(zaehler + "/" + nenner);
	}
	
	String bruchToString() {
	 	 return zaehler + "/" + nenner;
	}
	
	void kuerzen() {
		var m = Math.abs(zaehler); // speichert in m den Betrag von zaehler
		var n = Math.abs(nenner);  // speichert in n den Betrag von nenner
		var r = m % n;
	    while (r > 0) {  // Berechnung des ggT
	    m = n;
		n = r;
		r = m % n; }
		zaehler /= n;  // in n steht jetzt der ggT
		nenner /= n;
	}
	
	void gekuerztausgeben() {
    	kuerzen();
    	ausgeben();
	}
	
	boolean equals(Bruch x) {
		var a = new Bruch(this.zaehler, this.nenner);
		var b = new Bruch(x.zaehler, x.nenner);
		a.kuerzen();
		b.kuerzen();
		if ((a.zaehler == b.zaehler) && (a.nenner == b.nenner)) {
	      	return true;
	    } else {
	        return false;
	    }
	}
}

Ergänzen Sie die Klasse Bruch um drei Methoden:

- Bruch addiere(Bruch b)
- Bruch subtrahiere(Bruch b)
- double dezimalwert()

Die ersten beiden Methoden übernehmen als Argument einen Bruch,
den sie zu dem Bruch hinzuaddieren,
dessen addiere-Methode aufgerufen wird,
bzw. den sie von dem Bruch abziehen,
dessen subtrahiere-Methode aufgerufen wird.
Achten Sie darauf,
dass die beiden Methoden das Ergebnis als neuen Bruch zurückliefern
und dass die Attribute zaehler und nenner
der beiden Ausgangsbrüche nicht verändert werden.
Die Methode dezimalwert liefert den Wert des Bruchs
als Kommazahl (double) zurück. 
    
